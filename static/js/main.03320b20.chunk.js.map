{"version":3,"sources":["components/Header.js","CheckBox.js","components/Card.js","Table.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","href","Checkbox","type","name","checked","onChange","Card","sum","users","Table","data","useState","total","setTotal","map","user","totalUsers","setTotalUsers","Map","checkedItems","setCheckedItems","useEffect","totalCalculated","index","prix","parseFloat","replace","Number","toFixed","handleChange","useCallback","target","prevState","set","getIndexFromName","getSumCheckedByProduct","length","calculTotal","handleAllChange","split","calculTotalByName","el","i","get","getPricePerProduct","productIndex","console","log","productPrice","numberOfChecks","scope","CheckBox","reduce","prev","cur","App","valueTextarea","setValueTextarea","isJSONOk","setIsJSONOk","onSubmit","event","str","JSON","parse","e","IsJsonString","preventDefault","value","rows","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.03320b20.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => (\n  <>\n    <header>\n      <nav className=\"flex items-center justify-between flex-wrap bg-gray-800 p-6 w-full z-10 top-0\">\n        <div className=\"flex items-center flex-shrink-0 text-white mr-6\">\n          <a className=\"text-white no-underline hover:text-white hover:no-underline\" href=\"#\">\n            <span className=\"text-2xl pl-2\">Stach House Auchan</span>\n          </a>\n        </div>\n      </nav>\n    </header>\n  </>\n);\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Checkbox = ({\n  type = 'checkbox', name, checked = false, onChange,\n}) => (\n  <input type={type} name={name} checked={checked} onChange={onChange} />\n);\n\nCheckbox.propTypes = {\n  type: PropTypes.string,\n  name: PropTypes.string.isRequired,\n  checked: PropTypes.bool,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Checkbox;\n","import React from 'react';\n\nconst Card = ({ name, sum }) => (\n  <div className=\"relative flex flex-col min-w-0 break-words bg-white rounded mb-6 xl:mb-0 shadow-lg w-64 mr-2\">\n    <div className=\"flex-auto p-4\">\n      <div className=\"flex flex-wrap\">\n        <div className=\"relative w-full pr-4 max-w-full flex-grow flex-1\">\n          <h5 className=\"text-gray-500 uppercase font-bold text-xs\">\n            {name}\n          </h5>\n          <span className=\"font-semibold text-xl text-gray-800\">\n            {sum}\n            â‚¬\n          </span>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React, { useEffect, useState, useCallback } from 'react';\n\nimport CheckBox from './CheckBox';\nimport Card from './components/Card';\n\nconst users = ['Vincent', 'Quentin', 'Geoffrey'];\n\nconst initTotalUsers = () => users.map((user) => ({\n  name: user,\n  total: 0.0,\n}));\n\nconst Table = ({ data }) => {\n  const [total, setTotal] = useState(0.0);\n  const [totalUsers, setTotalUsers] = useState(initTotalUsers());\n  const [checkedItems, setCheckedItems] = useState(new Map());\n\n  useEffect(() => {\n    let totalCalculated = 0.0;\n    data.data.map(({ prix }, index) => {\n      totalCalculated += parseFloat(prix.replace(',', '.'));\n    });\n    setTotal(Number((totalCalculated).toFixed(2)));\n  }, []);\n\n  const handleChange = useCallback(({ target: { name, checked } }) => {\n    setCheckedItems((prevState) => {\n      const map = new Map(prevState);\n      map.set(name, checked);\n      if (!checked) { map.set(`all-${getIndexFromName(name)}`, checked); }\n\n      if (getSumCheckedByProduct(map, getIndexFromName(name)) === users.length) { map.set(`all-${getIndexFromName(name)}`, checked); }\n\n      calculTotal(map);\n      return map;\n    });\n  }, []);\n\n  const handleAllChange = useCallback(({ target: { name, checked } }) => {\n    setCheckedItems((prevState) => {\n      const map = new Map(prevState);\n      users.map((user) => {\n        map.set(`${user}-${getIndexFromName(name)}`, checked);\n      });\n      map.set(name, checked);\n      calculTotal(map);\n      return map;\n    });\n  }, []);\n\n  const getIndexFromName = (name) => name.split('-')[1];\n\n  const calculTotal = (map) => {\n    const total = users.map((user) => ({\n      name: user,\n      total: calculTotalByName(map, user),\n    }));\n    setTotalUsers(total);\n  };\n\n  const calculTotalByName = (map, name) => {\n    let total = 0;\n    data.data.map((el, i) => {\n      if (map.get(`${name}-${i}`)) { total += getPricePerProduct(map, i); }\n    });\n    return Number((total).toFixed(2));\n  };\n\n  const getPricePerProduct = (map, productIndex) => {\n    console.log(data.data[productIndex].prix.replace(',', '.'));\n    const productPrice = parseFloat(data.data[productIndex].prix.replace(',', '.'));\n    const numberOfChecks = getSumCheckedByProduct(map, productIndex);\n\n    return numberOfChecks === 0 ? 0 : productPrice / numberOfChecks;\n  };\n\n  const getSumCheckedByProduct = (map, productIndex) => {\n    let sum = 0;\n    users.map((user) => {\n      if (map.get(`${user}-${productIndex}`)) { sum++; }\n    });\n    return sum;\n  };\n\n  const renderTable = () => data.data.map((el, index) => {\n    const { name, prix } = el;\n\n    return (\n      <tr key={index}>\n        <td className=\"px-6 py-4 whitespace-nowrap\"><p className=\"text-sm text-gray-900 text-left\">{name}</p></td>\n        <td className=\"px-6 py-4 whitespace-nowrap\"><p className=\"text-sm text-gray-900 text-center\">{prix}</p></td>\n        {users.map((el) => (\n          <td className=\"px-6 py-4 whitespace-nowrap\"><CheckBox name={`${el}-${index}`} checked={checkedItems.get(`${el}-${index}`)} onChange={handleChange} /></td>\n        ))}\n        <td className=\"px-6 py-4 whitespace-nowrap\"><CheckBox name={`all-${index}`} checked={checkedItems.get(`all-${index}`)} onChange={handleAllChange} /></td>\n      </tr>\n    );\n  });\n  return (\n    <>\n      <div className=\"flex flex-col\">\n        <div className=\"-my-2 sm:-mx-6 lg:-mx-8\">\n          <div className=\"py-2 align-middle inline-block min-w-full sm:px-6 lg:px-8\">\n            <div className=\"shadow border-b border-gray-200 sm:rounded-lg\">\n              <table className=\"min-w-full divide-y divide-gray-200 table-auto\">\n                <thead className=\"bg-gray-50\">\n                  <tr className=\"bg-gray-50\">\n                    <th scope=\"col\" className=\"bg-gray-50 sticky top-0 z-10 px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Nom de l'article\n                    </th>\n                    <th scope=\"col\" className=\"bg-gray-50 sticky top-0 z-10 px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Prix\n                    </th>\n                    {users.map((el) => (\n                      <th scope=\"col\" className=\"bg-gray-50 sticky top-0 z-10 px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">{el}</th>\n                    ))}\n                    <th scope=\"col\" className=\"bg-gray-50 sticky top-0 z-10 px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                      Tous\n                    </th>\n                  </tr>\n                </thead>\n                <tbody className=\"bg-white divide-y divide-gray-200\">\n                  {renderTable()}\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex mt-10 justify-center\">\n        {totalUsers.map(({ name, total }) => (<Card name={name} sum={total} />))}\n      </div>\n\n      <div className=\"flex mt-10 justify-center mb-10\">\n        <Card name=\"Total\" sum={total} />\n        <Card\n          name=\"VÃ©rification Total\"\n          sum={totalUsers.reduce((prev, cur) => Number((prev + cur.total).toFixed(2)), 0)}\n        />\n      </div>\n\n    </>\n  );\n};\n\nexport default Table;\n","import React, { useState } from 'react';\n\nimport './App.css';\nimport Header from './components/Header';\nimport Table from './Table';\n\nfunction App() {\n  const [valueTextarea, setValueTextarea] = useState('');\n  const [isJSONOk, setIsJSONOk] = useState(false);\n\n  const handleChange = (event) => {\n    setValueTextarea(event.target.value);\n  };\n\n  const IsJsonString = (str) => {\n    try {\n      JSON.parse(str);\n    } catch (e) {\n      return false;\n    }\n    return true;\n  };\n\n  const handleSubmit = (event) => {\n    if (IsJsonString(valueTextarea)) { setIsJSONOk(true); }\n    event.preventDefault();\n  };\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <div>\n        {!isJSONOk && (\n        <form onSubmit={handleSubmit}>\n          <label>Code JSON :</label>\n          <textarea value={valueTextarea} onChange={handleChange} className=\"w-full px-3 py-2 text-gray-700 border rounded-lg focus:outline-none\" rows=\"4\" />\n          <input className=\"py-2 px-4 bg-red-500 text-white font-semibold rounded-lg shadow-md hover:bg-red-700 focus:outline-none\" type=\"submit\" value=\"Submit\" />\n        </form>\n        )}\n        {isJSONOk && <Table data={JSON.parse(valueTextarea)} />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n/* {\"data\": [\n{\n\"name\":\"test\",\n\"prix\": 10\n}\n]} */\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}